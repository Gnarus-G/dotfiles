#!/bin/sh

export SCRIPTPATH="$( cd "$(dirname "$0")" ; pwd -P )"

# Down the last running theme
if [ -f "/tmp/leftwm-theme-down" ]; then
    /tmp/leftwm-theme-down
    rm /tmp/leftwm-theme-down
fi
ln -s $SCRIPTPATH/down /tmp/leftwm-theme-down

#boot picom compositor if it exists
if [ -x "$(command -v picom)" ]; then
  picom --no-vsync --config=$SCRIPTPATH/.config/picom/picom.conf &>/tmp/picom_error.log &
fi

# Set the theme.ron config
leftwm-command "LoadTheme $SCRIPTPATH/theme.ron"

if [ -x "$(command -v feh)" ]; then
  feh --randomize --bg-fill "$SCRIPTPATH"/wallpaper/*.png "$SCRIPTPATH"/wallpaper/**/*.png
fi

# Start dunst.
if [ -x "$(command -v dunst)" ]; then
  dunst -conf ${SCRIPTPATH}/.config/dunst/dunstrc.ini &
  sleep 1
  notify-send -u low "Let's get ignant!"
fi

start_eww() {
  if [ -x "$(command -v eww)" ]; then
    # Start eww daemon
    eww -c $SCRIPTPATH/.config/eww daemon &
    sleep 1  # Give daemon time to start
    
    # Open bar on each monitor with proper positioning using window arguments
    MONITOR_NAMES=$(xrandr --query | grep " connected" | cut -d" " -f1)
    echo "$MONITOR_NAMES" | cat -n | while read i name; do
      # Adjust i to be 0-based
      i=$((i - 1))
      # Open bar with unique ID and window arguments
      eww -c $SCRIPTPATH/.config/eww open bar \
        --id "$name-bar" \
        --arg monitor="$name" \
        --arg monitor_id="$i"

      echo "  âœ… Opened bar$i on monitor $name"
    done
    
    notify-send -u low "ðŸŽ¯ Eww started on $MONITOR_COUNT monitor(s)"
  else
    notify-send '`eww` not found, please install it (system wide "/usr/bin") and try again.'
    return 1
  fi
}

start_eww &> /tmp/eww_error.log
