#!/bin/sh

export SCRIPTPATH="$( cd "$(dirname "$0")" ; pwd -P )"

# Down the last running theme
if [ -f "/tmp/leftwm-theme-down" ]; then
    /tmp/leftwm-theme-down
    rm /tmp/leftwm-theme-down
fi
ln -s $SCRIPTPATH/down /tmp/leftwm-theme-down

# start system tray viewer, if one exists
type stalonetray &> /dev/null && stalonetray &

#boot picom compositor if it exists
if [ -x "$(command -v picom)" ]; then
  picom --no-vsync --config=$SCRIPTPATH/.config/picom/picom.conf &>/tmp/picom_error.log &
fi

# Set the theme.ron config
leftwm-command "LoadTheme $SCRIPTPATH/theme.ron"

if [ -x "$(command -v feh)" ]; then
  feh --randomize --bg-fill "$SCRIPTPATH"/wallpaper/*.png "$SCRIPTPATH"/wallpaper/**/*.png
fi

# Start dunst.
if [ -x "$(command -v dunst)" ]; then
  dunst -conf ${SCRIPTPATH}/.config/dunst/dunstrc.ini &
  sleep 1
  notify-send -u low "Let's get ignant!"
fi

start_eww() {
  if [ -x "$(command -v eww)" ]; then
    # Start eww daemon
    eww -c $SCRIPTPATH/.config/eww daemon &
    sleep 1  # Give daemon time to start
    
    # Detect monitors and open bars  
    MONITOR_COUNT=$(xrandr --query | grep " connected" | wc -l)
    echo "ðŸ“Š Starting eww with $MONITOR_COUNT monitor(s)"
    
    # Open bar on each monitor with proper positioning using window arguments
    for i in $(seq 0 $((MONITOR_COUNT - 1))); do
      # Configure positioning based on monitor index
      if [ $i -eq 0 ]; then
        # Primary monitor: more margin and reserve space
        Y_OFFSET="10px"
        RESERVE_DIST="35px"
        echo "  Primary monitor: y=${Y_OFFSET}, reserve=${RESERVE_DIST}"
      else
        # Secondary monitors: less margin and reserve space
        Y_OFFSET="5px"
        RESERVE_DIST="30px"
        echo "  Secondary monitor: y=${Y_OFFSET}, reserve=${RESERVE_DIST}"
      fi
      
      # Open bar with unique ID and window arguments
      eww -c $SCRIPTPATH/.config/eww open bar \
        --id "bar$i" \
        --screen $i \
        --arg monitor_id=$i \
        --arg y_offset="$Y_OFFSET" \
        --arg reserve_distance="$RESERVE_DIST"
      
      echo "  âœ… Opened bar$i on monitor $i"
    done
    
    notify-send -u low "ðŸŽ¯ Eww started on $MONITOR_COUNT monitor(s)"
  else
    notify-send '`eww` not found, please install it (system wide "/usr/bin") and try again.'
    return 1
  fi
}

start_eww &> /tmp/eww_error.log
