#!/bin/sh

export SCRIPTPATH="$( cd "$(dirname "$0")" ; pwd -P )"

# Down the last running theme
if [ -f "/tmp/leftwm-theme-down" ]; then
    /tmp/leftwm-theme-down
    rm /tmp/leftwm-theme-down
fi
ln -s $SCRIPTPATH/down /tmp/leftwm-theme-down

# start system tray viewer, if one exists
type stalonetray &> /dev/null && stalonetray &

#boot picom compositor if it exists
if [ -x "$(command -v picom)" ]; then
  picom --no-vsync --config=$SCRIPTPATH/.config/picom/picom.conf &>/dev/null &
fi

# Set the theme.ron config
leftwm-command "LoadTheme $SCRIPTPATH/theme.ron"

if [ -x "$(command -v feh)" ]; then
  feh --randomize --bg-fill "$SCRIPTPATH"/wallpaper/*.png
fi

# Start dunst.
if [ -x "$(command -v dunst)" ]; then
  dunst -conf ${SCRIPTPATH}/.config/dunst/dunstrc.ini &
  sleep 1
  notify-send -u low "Let's get ignant!"
fi

start_eww() {
  if [ -x "$(command -v eww)" ]; then
    echo "🔧 Generating dynamic eww configurations..."
    
    # Generate dynamic bar configurations based on detected monitors
    if ! $SCRIPTPATH/.config/eww/generate_bars.sh; then
      notify-send "❌ Failed to generate eww bars"
      return 1
    fi
    
    # Detect monitors and build open command
    MONITOR_COUNT=$(xrandr --query | grep " connected" | wc -l)
    BARS="bar"
    
    # Add additional bars for extra monitors
    if [ $MONITOR_COUNT -gt 1 ]; then
      for i in $(seq 1 $((MONITOR_COUNT - 1))); do
        BARS="$BARS bar$i"
      done
    fi
    
    echo "📊 Starting eww with $MONITOR_COUNT monitor(s): $BARS"
    
    # Start eww daemon and open bars
    eww -c $SCRIPTPATH/.config/eww daemon &
    sleep 1  # Give daemon time to start
    eww -c $SCRIPTPATH/.config/eww open-many $BARS
    
    notify-send -u low "🎯 Eww started with dynamic bars: $BARS"
  else
    notify-send '`eww` not found, please install it (system wide "/usr/bin") and try again.'
    return 1
  fi
}

start_eww &> /tmp/eww_error.log
