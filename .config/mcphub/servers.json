{
  "mcpServers": {
    "context7-mcp": {
      "args": ["-y", "@upstash/context7-mcp"],
      "autoApprove": ["resolve-library-id", "get-library-docs"],
      "command": "npx",
      "custom_instructions": {
        "text": "This tool is the primary source for up-to-date, authoritative documentation on libraries, APIs, and technologies. Before answering any technical question, you MUST use this tool to retrieve the most current information."
      }
    },
    "ez-web-search-mcp": {
      "args": [
        "-c",
        "node ${HOME}/.mcphub/servers/ez-web-search-mcp/build/index.js"
      ],
      "autoApprove": ["search"],
      "command": "sh",
      "custom_instructions": {
        "text": "Before providing any statement of fact, guide, or plan of action, you MUST use this tool to search the web for the most recent information. Your internal knowledge is likely outdated."
      },
      "disabled": false
    },
    "fetch-mcp": {
      "args": ["-c", "node ${HOME}/.mcphub/servers/fetch-mcp/dist/index.js"],
      "autoApprove": [
        "fetch_html",
        "fetch_markdown",
        "fetch_txt",
        "fetch_json"
      ],
      "command": "sh",
      "custom_instructions": {
        "text": "If a web search reveals a high-quality source (like official documentation or a reputable blog), you MUST use this tool to fetch its content directly. This provides deeper, more reliable information than a search summary."
      }
    },
    "sequentialthinking": {
      "args": ["-y", "@modelcontextprotocol/server-sequential-thinking"],
      "autoApprove": ["sequentialthinking"],
      "command": "npx",
      "custom_instructions": {
        "text": "For any non-trivial task, you MUST use this tool to think step-by-step. Your first thought should always be: 'Do I need to search for the latest information before proceeding?'"
      }
    },
    "tts": {
      "autoApprove": ["list_voices", "speak", "stop_speaking"],
      "command": "tts-mcp",
      "custom_instructions": {
        "text": "When asked to read or speak, use this server and the `speak` tool."
      },
      "disabled": false,
      "env": {
        "DBUS_SESSION_BUS_ADDRESS": "unix:path=/run/user/1000/bus",
        "HIMITHER_TTS_LOG_FILE": "/tmp/tts-mcp-server.log",
        "RUST_LOG": "debug",
        "XDG_RUNTIME_DIR": "/run/user/1000"
      }
    },
    "vectorcode-mcp-server": {
      "args": [],
      "command": "vectorcode-mcp-server"
    }
  },
  "nativeMCPServers": {
    "gnarus": {
      "custom_instructions": {
        "text": "Consider these two points:\n- When provided a plugin's source code location, always attempt to search and read through it before answering anything.\n- Search inside the nvim://plugin/.. paths to find the source code (lua) files for any of our neovim plugins.\n- Enhance the user's prompt before answering it."
      }
    },
    "mcphub": {
      "autoApprove": ["get_current_servers"]
    },
    "neovim": {
      "autoApprove": [
        "read_file",
        "read_multiple_files",
        "find_files",
        "list_directory"
      ],
      "custom_instructions": {
        "text": "**Important Notes**:\n- Always use this mcp server's tools for file operations\n- If `edit_file` fails, then **ALWAYS** use `read_file` and then `write_file` tool from the mcp server."
      },
      "disabled": false,
      "disabled_tools": []
    }
  }
}
